001 REM COYRIGHT: 2019 JONAS KUEHN
002 PRINT CHR$(147)
003 GOSUB 13000
010 PRINT TAB(15)"SELL IT"
020 PRINT TAB(12)"BY JONAS KUEHN"
030 FOR I=0 TO 3000:NEXT I
040 PRINT CHR$(147)
050 PRINT "MOECHTEST DU EIN (N)EUES SPIEL ODER EIN (A)LTES LADEN?";
051 GET A$
052 IF A$="" GOTO 51
060 IF A$="N" GOTO 100 REM BEIDE 100 FUERS ERSTE
070 IF A$="A" GOTO 100 REM BEIDE 100 FUERS ERSTE
080 PRINT TAB(12)"FALSCHE EINGABE"
090 GOTO 50
099 REM NEUES SPIEL
100 DATUM = 0
110 KT = 1000000
120 PN% = 1
130 CS% = 0
150 GOTO 250

199 REM SPIEL LADEN
200 INPUT "GEBE DEINEN CODE EIN"; A
210 K = DIV(VAL(A), 100): D = MOD(VAL(A), 100)
220 DATUM = D
230 KT = K

249 REM GLOBAL VARIABLES SETUP
250 PN% = 1
251 PPN% = 0
255 CS% = 0
260 SCRNED% = 0
265 SUBCSR% = 0
270 CMAX% = 5
275 PM = 1.0
276 SUM=0
280 GOSUB 8000
290 GOSUB 10000
292 GOSUB 11000
293 GOSUB 12001
294 GOSUB 12004
295 GOTO 9000

299 REM MAIN GAME LOOP AT 300
300 GET PSSED$
310 IF PSSED$="A" AND CS% > 0 THEN CS% = CS% - 1:GOTO 900
315 IF PSSED$="A" AND CS% = 0 THEN CS% = CMAX%:GOTO 900
320 IF PSSED$="D" AND CS% < CMAX% THEN CS% = CS% + 1:GOTO 900
325 IF PSSED$="D" AND CS% = CMAX% THEN CS% = 0:GOTO 900
330 IF PSSED$="W" AND CS% > 0 THEN CS% = CS% - 1:GOTO 900
335 IF PSSED$="W" AND CS% = 0 THEN CS% = CMAX%:GOTO 900
340 IF PSSED$="S" AND CS% < CMAX% THEN CS% = CS% + 1:GOTO 900
345 IF PSSED$="S" AND CS% = CMAX% THEN CS% = 0:GOTO 900
350 IF PSSED$=" " GOTO 400 REM SELECT
360 IF PSSED$="+" GOTO 700 REM VARIABLECHANGE+
370 IF PSSED$="-" GOTO 750 REM VARIABLECHANGE-
380 GOTO 300

399 REM SELECT
400 IF PN%<>1 GOTO 500
401 IF CS%=0 GOTO 9010
402 IF CS%=1 THEN PN%=3:PRINT CHR$(147);:PRINT PN%: END
403 IF CS%=2 GOTO 9030
404 IF CS%=3 GOTO 9040
405 IF CS%=4 THEN PN%=6:PRINT CHR$(147);:PRINT PN%: END
406 IF CS%=5 THEN PN%=7:PRINT CHR$(147);:PRINT PN%: END
407 IF CS%=6 THEN PN%=9:PRINT CHR$(147);:PRINT PN%: END
408 IF CS%=7 THEN PN%=8:PRINT CHR$(147);:PRINT PN%: END
410 REM DUMMY

499 REM NEUKAUF
500 IF PN%<>2 GOTO 527
501 IF CS%<23 THEN IF KT>=PR(CS%) THEN KT=KT-PR(CS%):AZ(CS%)=AZ(CS%)+1:GOTO 900
502 IF CS%=23 GOTO 9000
503 FORI=0 TO 22:SUM=SUM+VA(I)*PM*PR(I):NEXT I
504 IF SUM<KT THEN FORI=0TO22:AZ(I)=AZ(I)+VA(I):VA(I)=0:NEXT:KT=KT-SUM:GOTO 9000
505 IF SUM>KT THEN PRINTTAB(10)CHR$(28)"ZU TEUER!"CHR$(5)
506 FOR I=0 TO 5000:NEXT

527 REM ANKAUF
528 IF PN%=4 AND CS% < 0 OR CS% > 22 GOTO 9000
529 IF PN%<>4 GOTO 600
531 X=(RND(1)*25+75):Y=PR%(CS%)*INT(X):Z=Y/100
532 IF KT%>=Z AND VH%(CS%)=1 THEN KT%=KT%-Z:AZ%(CS%)=AZ%(CS%)+1:GOTO 900

599 REM VERKAUF
600 IF PN%<>5 GOTO 900
601 IF CS%=00 THEN PPN%=0:PM=1.0:GOTO 900 REM BILLIG
602 IF CS%=01 THEN PPN%=0:PM=1.2:GOTO 900 REM NORMAL
603 IF CS%=02 THEN PPN%=0:PM=1.5:GOTO 900 REM TEUER
604 IF CS%=03 THEN PPN%=0:PM=2.0:GOTO 900 REM EXTREM
605 IF CS%=04 THEN GOTO 9000 REM ZURUECK

698 GOTO 900
699 REM VARIABLECHANGE+
700 IF PN%<>2 GOTO 900
701 IF CS%>22 GOTO 9000
702 VA(CS%)=VA(CS%)+1
703 PPN%=0:GOTO 900

749 REM VARIABLECHANGE-
750 IF PN%<>2 GOTO 900
751 IF CS%>22 GOTO 900
752 IF VA(CS%)>0 THEN VA(CS%)=VA(CS%)-1
753 PPN%=0:GOTO 900

899 REM RENDER CALCULATION PERPARATION
900 IF PN%=1 THEN XUS=64+CS%*32:YUS= 90:HUX=INT(XUS/256):LUX=XUS-256*HUX
901 IF PN%=2 THEN XRS=198:YRS=50+CS%*8:HRX=INT(XRS/256):LRX=XRS-256*HRX
904 IF PN%=5 THEN XRS=136:YRS=74+CS%*8:HRX=INT(XRS/256):LRX=XRS-256*HRX
911 POKE VIC+2, LUX: IF HUX>0 THEN POKE VIC+16, PEEK(VIC+16) OR 2
912 POKE VIC+3, YUS: IF HUX=0 THEN POKE VIC+16, PEEK(VIC+16) AND 253
913 POKE VIC+0, LRX: IF HRX>0 THEN POKE VIC+16, PEEK(VIC+16) OR 1
914 POKE VIC+1, YRS: IF HRX=0 THEN POKE VIC+16, PEEK(VIC+16) AND 254
920 IF PPN%<>PN% GOTO 950
921 GOTO 300
949 REM RENDER
950 PRINT CHR$(147);
951 IF PN% <> 1 GOTO 1100
960 PRINT "KONTO: "STR$(KT)
970 FOR I=0 TO 39:PRINTCHR$(166);:NEXT I
1001 FOR I=0 TO 4: PRINT " ";:NEXT I
1002 FOR I=0 TO 7
1003 PRINT CHR$(I*4+96);: PRINT CHR$(I*4+97);: PRINT "  ";
1004 NEXT I
1005 PRINT "": FOR I=0 TO 4: PRINT " ";:NEXT I
1006 FOR I=0 TO 7: GOTO 1007
1007 PRINT CHR$(I*4+98);: PRINT CHR$(I*4+99);: PRINT "  ";
1008 NEXT I

1100 IF PN%<>2 GOTO 1200
1110 FOR I=0 TO 22: PRINT NM$(I);:PRINT TAB(MAXNL);:PRINT"  $";
1112 IF PR(I)<10000 THEN PRINT" ";
1113 PRINT STR$(PR(I));:PRINT"   ";:PRINT STR$(VAZ(I));
1139 PRINT""
1140 NEXT I
1150 PRINT "ZURUECK"
1151 PRINT "KAUFEN";

1200 IF PN% <> 3 GOTO 1300
1300 IF PN% <> 4 GOTO 1400
1400 IF PN% <> 5 GOTO 1500
1410 PRINT "KONTO: "STR$(KT)"  PM: "STR$(PM)
1411 FOR I=0 TO 39:PRINTCHR$(166);:NEXT I
1420 FOR I=0 TO 4: PRINT " ";:NEXT I:PRINT " PREISE:"
1422 FOR I=0 TO 3: PRINT " ";:NEXT I
1423 IF PM=1.0 THEN PRINTCHR$(165);:PRINT " BILLIG"
1424 IF PM<>1.0 THEN PRINT "  BILLIG"
1425 FOR I=0 TO 3: PRINT " ";:NEXT I
1426 IF PM=1.2 THEN PRINTCHR$(165);:PRINT " NORMAL"
1427 IF PM<>1.2 THEN PRINT "  NORMAL"
1428 FOR I=0 TO 3: PRINT " ";:NEXT I
1429 IF PM=1.5 THEN PRINTCHR$(165);:PRINT " TEUER"
1430 IF PM<>1.5 THEN PRINT "  TEUER"
1431 FOR I=0 TO 3: PRINT " ";:NEXT I
1432 IF PM=2.0 THEN PRINTCHR$(165);:PRINT " EXTREM"
1433 IF PM<>2.0 THEN PRINT "  EXTREM"
1434 FOR I=0 TO 4: PRINT " ";:NEXT I:PRINT "ZURUECK";

1500 PPN%=PN%:GOTO 300











































7999 REM NAME
8000 DIM NM$(23)
8001 FOR I=0 TO 22: READ A$: NM$(I)=A$: NEXT
8050 DATA "AUDI QUATTRO","AUDI 80","BMW 3ER","BMW M3","BMW 5ER"
8051 DATA "FORD FIESTA","FORD ESCORT","FORD CAPRI","MB 190","MB E-KLASSE"
8052 DATA "MB SL","OPEL CORSA","OPEL MANTA","OPEL VECTRA","PORSCHE 944"
8053 DATA "PORSCHE 911","TRABANT","VW GOLF I","VW POLO","VW GOLF II"
8054 DATA "VW T3","WARTBURG 353","VOLVO 240"

8099 REM ANZAHL
8100 DIM AZ(23)
8101 FOR I=0 TO 22: READ A: AZ(I)=A: NEXT
8150 DATA 0,0,0,0,0
8151 DATA 0,0,0,0,0
8152 DATA 0,0,0,0,0
8153 DATA 0,0,0,0,0
8154 DATA 0,0,0

8199 REM PREIS
8200 DIM PR(23)
8201 FOR I=0 TO 22: READ A: PR(I)=A: NEXT
8250 DATA 20000,18000,12500,15000,20000
8251 DATA 8000,9000,10000,20000,25000
8252 DATA 30000,10000,15000,10000,80000
8253 DATA 90000,20000,18000,15000,23000
8254 DATA 12000,18000,100000

8299 REM NACHFRAGE
8300 DIM NF(23)
8301 FOR I=0 TO 22: READ A: NF(I)=A: NEXT
8350 DATA 0.6,0.4,0.5,0.3,0.7
8351 DATA 0.9,0.6,0.8,0.5,0.6
8352 DATA 0.4,0.8,0.5,0.6,0.05
8353 DATA 0.01,0.9,0.2,0.2,0.3
8354 DATA 0.2,0.4,0.5

8399 REM VORHANDEN (FARHZEUGMARKT)
8400 DIM VH(22)
8401 FOR I=0 TO 22: READ A: VH(I)=A: NEXT
8450 DATA 1,1,1,1,1
8451 DATA 1,1,1,1,1
8452 DATA 1,1,1,1,1
8453 DATA 1,1,1,1,1
8454 DATA 1,1,1

8499 REM MAXNAMELENGTH
8500 MAXNL=0
8501 FOR I=0 TO 22: L=LEN(NM$(I)): IF L>MAXNL THEN MAXNL=L: NEXT

8599 REM VORLAEUFIGE ANZAHL
8600 DIM VA(23)
8601 FOR I=0 TO 22: READ A: VA(I)=A: NEXT
8650 DATA 0,0,0,0,0
8651 DATA 0,0,0,0,0
8652 DATA 0,0,0,0,0
8653 DATA 0,0,0,0,0
8654 DATA 0,0,0

8699 REM PERSONAL COUNTER
8700 DIM PC(4)
8701 FOR I=0 TO 3: READ A: PC(I)=A: NEXT
8702 0,0,0,0

8800 RETURN


8999 REM PAGECHANGES
9000 PN%=1
9001 CS%=0
9002 CMAX%=7
9003 GOSUB 12001
9004 GOSUB 12004
9009 GOTO 900
9010 PN%=2
9011 CS%=0
9012 CMAX%=24
9013 GOSUB 12002
9014 GOSUB 12003
9019 GOTO 900
9020 PN%=3
9021 CS%=0
9022 CMAX%=0
9023 GOSUB 12002
9024 GOSUB 12003
9029 GOTO 900
9030 PN%=4:REM ANKAUF
9031 CS%=0
9032 CMAX%=0
9033 GOSUB 12002
9034 GOSUB 12003
9039 GOTO 900
9040 PN%=5:REM VERKAUF
9041 CS%=0
9042 CMAX%=4
9043 GOSUB 12002
9044 GOSUB 12003
9049 GOTO 900


10000 REM CUSTOM CHARSET (64-127 + 160-191)
10010 REM COPY ROUTINE
10011 FOR I=0 TO 26: READ X: POKE 828+I,X: NEXT I
10012 DATA 169,000,160,208,133,095,132,096
10013 DATA 169,000,160,224,133,090,132,091
10014 DATA 169,000,160,064,133,088,132,089
10015 DATA 076,191,163
10016 REM COPY $D000-$DFFF -> $3000-$3FFF
10020 REM CHARSET ROM INTO RAM
10021 POKE 56334,PEEK(56334) AND 254
10022 POKE 1,PEEK(1) AND 251
10023 SYS 828
10024 POKE 1,PEEK(1) OR 4
10025 POKE 56334,PEEK(56334) OR 1
10026 POKE 53272,PEEK(53272) AND 240 OR 12
10061 FOR A=12800 TO 13111: READ ZE: POKE A,ZE: NEXT A
10062 DATA 000,003,003,003,003,003,127,127
10063 DATA 000,192,192,192,192,192,254,254
10064 DATA 127,127,003,003,003,003,003,000
10065 DATA 254,254,192,192,192,192,192,000

10066 DATA 000,000,000,125,253,133,133,253
10067 DATA 000,000,000,255,255,255,255,255
10068 DATA 253,253,252,255,159,096,096,000
10069 DATA 255,255,000,255,207,048,048,000

10070 DATA 000,000,000,000,001,001,001,001
10080 DATA 000,063,127,224,192,192,128,128
10081 DATA 001,001,001,015,007,003,001,000
10082 DATA 128,128,128,240,224,192,128,000

10083 DATA 000,001,003,007,015,003,003,003
10084 DATA 000,128,192,224,240,192,192,192
10085 DATA 003,003,003,003,003,127,127,000
10086 DATA 192,192,192,192,192,254,254,000

10087 DATA 000,001,003,003,001,000,007,015
10088 DATA 000,128,192,192,128,000,224,240
10089 DATA 031,031,031,031,031,031,031,031
10090 DATA 248,248,248,248,248,248,248,248

10091 DATA 000,000,031,016,031,016,031,016
10092 DATA 000,000,224,016,240,016,240,016
10093 DATA 031,016,031,016,031,240,255,255
10094 DATA 240,016,240,016,240,031,255,255

10095 DATA 000,000,000,000,000,000,007,004
10096 DATA 000,000,000,000,000,000,224,032
10097 DATA 012,015,127,127,103,024,024,000
10098 DATA 048,240,254,254,230,024,024,000

10099 DATA 000,000,065,097,113,121,125,127
10100 DATA 000,000,140,140,140,140,140,140
10101 DATA 127,125,121,113,097,065,000,000
10102 DATA 140,140,140,140,140,140,000,000

10103 DATA 000,001,003,007,015,003,003,003
10104 DATA 000,128,192,224,240,192,192,192
10105 DATA 003,003,003,003,003,003,003,000
10106 DATA 192,192,192,192,192,192,192,000

10107 DATA 000,032,096,254,254,096,032,000

10108 DATA 000,004,006,127,127,006,004,000
10109 DATA 255,255,255,255,255,255,255,255
10110 RETURN

10999 REM SETUP VIC2 FOR SELECTOR SPRITES
11000 VIC=53248:BRS%=13:PRS=BRS%*64:NRS%=0:BUS%=14:PUS=BUS%*64:NUS%=1
11010 FOR X=0 TO 62
11020 READ B%
11030 POKE PRS+X,B%
11040 NEXT X
11045 FOR X=0 TO 62
11050 READ B%
11055 POKE PUS+X,B%
11060 NEXT X
11065 POKE VIC+21,3
11075 POKE 2040,BRS%
11076 POKE 2041,BUS%
11077 POKE VIC+39, 1
11078 POKE VIC+40, 1
11080 XRS=198 : YRS=50
11090 XUS=198 : YUS=50

11100 DATA 0,0,0
11101 DATA 32,0,0
11102 DATA 96,0,0
11103 DATA 254,0,0
11104 DATA 254,0,0
11105 DATA 96,0,0
11106 DATA 32,0,0
11107 DATA 0,0,0
11108 DATA 0,0,0
11109 DATA 0,0,0
11110 DATA 0,0,0
11111 DATA 0,0,0
11112 DATA 0,0,0
11113 DATA 0,0,0
11114 DATA 0,0,0
11115 DATA 0,0,0
11116 DATA 0,0,0
11117 DATA 0,0,0
11118 DATA 0,0,0
11119 DATA 0,0,0
11120 DATA 0,0,0

11200 DATA 0,0,0
11201 DATA 1,128,0
11202 DATA 3,192,0
11203 DATA 7,224,0
11204 DATA 15,240,0
11205 DATA 3,192,0
11206 DATA 3,192,0
11207 DATA 3,192,0
11208 DATA 3,192,0
11209 DATA 3,192,0
11210 DATA 3,192,0
11211 DATA 3,192,0
11212 DATA 3,192,0
11213 DATA 3,192,0
11214 DATA 3,192,0
11215 DATA 0,0,0
11216 DATA 0,0,0
11217 DATA 0,0,0
11218 DATA 0,0,0
11219 DATA 0,0,0
11220 DATA 0,0,0

11231 POKE VIC+2*NUS%, XUS
11232 POKE VIC+1+2*NUS%, YUS
11233 POKE VIC+NRS%, XRS
11234 POKE VIC+1+NRS%, YRS

11250 GOSUB 12001
11251 GOSUB 12002

11300 RETURN

12000 REM DEFINE DEACTIVATION/ACTIVATION FUNCTIONS
12001 POKE 53269, PEEK(53269) AND (254): RETURN
12002 POKE 53269, PEEK(53269) AND (253): RETURN
12003 POKE 53269,PEEK(53269) OR 1: RETURN
12004 POKE 53269,PEEK(53269) OR 2: RETURN


13000 POKE 53280,6
13010 POKE 646,1
13050 RETURN
